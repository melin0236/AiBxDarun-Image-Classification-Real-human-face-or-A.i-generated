# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wvLliMQQrlpbMhvdEilORQcpS4yYoc3T
"""

import streamlit as st
from PIL import Image
import os
import json
import numpy as np
import pandas as pd
from fastai.vision.all import load_learner
from fastai.vision.all import PILImage
from fastai.vision.all import Resize
from fastai.vision.all import *
from fastai.vision.data import ImageDataLoaders
import pathlib
import urllib

st.set_page_config(page_title="RealORFake",page_icon="ðŸ¤–",layout="wide",initial_sidebar_state="expanded")

plt = platform.system()
#if plt == 'Windows': pathlib.PosixPath = pathlib.WindowsPath
#if plt == 'Linux': pathlib.WindowsPath = pathlib.PosixPath

model = load_learner('fakeorreal.pkl',cpu=True)

st.title("**Welcome to the image prediction app!**")
st.subheader('Here, we classify between "real human face" and "AI-generated human face"')
st.markdown("Please upload your image")
st.markdown("**Crop your image into the human face only -- No body**")
st.image('./Image Dumb/img000032.jpg')

st.sidebar.title("**More Details**")
st.sidebar.markdown("**Github :**")
st.sidebar.markdown("https://github.com/melin0236/AiBxDarun-Image-Classification-Real-human-face-or-A.i-generated/tree/main")
st.sidebar.markdown("-----------------")
st.sidebar.markdown("**Blog (written in Thai) :**")
st.sidebar.markdown("((Blog))")
st.sidebar.markdown("-----------------")

st.markdown("-----------------")
file = st.file_uploader("Upload your image:")
st.markdown("-----------------")
if file is None:
    img = PILImage.create(os.path.join(sample_path, sample_image))
    st.markdown('\n')
    st.title("Here is the sample image:")
    st.image(img)

else:
    img = PILImage.create(file)
    st.title("Here is the image you've selected:")
    st.image(img)
c_type = ['Real Image', 'Fake Image']
im_predicted = model.predict(img)
c_name = im_predicted[0]
ts_prob = im_predicted[2]
prob = torch.sort(ts_prob, descending=True)
m_prob = prob[0][0]

if c_name in c_type:
     st.spinner(text="In progress...")
     st.success(f"This image is **{c_name}**  with the probability of **{m_prob*100:.02f}**%")

     if c_name == c_type[0]:
         st.title(f"**{c_name}** \n ")
         st.header('**Real Human Image**')

     elif c_name == c_type[1]:
         st.title(f"**{c_name}** \n ")
         st.header('**Fake Human Image**')

else:
     st.error(f"Sorry, please upload another image") #result display
st.markdown(' ')
st.markdown('________________________________________________')